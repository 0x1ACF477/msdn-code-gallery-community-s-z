//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Data.EntityClient;
using System.ComponentModel;
using System.Xml.Serialization;
using System.Runtime.Serialization;

[assembly: EdmSchemaAttribute()]
#region EDM Relationship Metadata

[assembly: EdmRelationshipAttribute("FinanceDBModel", "FK_ElementElementDomain", "Domain", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Finance.DataProvider.Domain), "Element", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Finance.DataProvider.Element), true)]
[assembly: EdmRelationshipAttribute("FinanceDBModel", "FK_ElementElementType", "ElementType", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Finance.DataProvider.ElementType), "Element", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Finance.DataProvider.Element), true)]
[assembly: EdmRelationshipAttribute("FinanceDBModel", "FK_ElementCorrelationElementA", "Element", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Finance.DataProvider.Element), "ElementCorrelation", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Finance.DataProvider.ElementCorrelation), true)]
[assembly: EdmRelationshipAttribute("FinanceDBModel", "FK_ElementCorrelationElementB", "Element", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Finance.DataProvider.Element), "ElementCorrelation", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Finance.DataProvider.ElementCorrelation), true)]
[assembly: EdmRelationshipAttribute("FinanceDBModel", "FK_ElementMovementDistributionRange", "DistributionRange", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Finance.DataProvider.DistributionRange), "ElementMovementDistribution", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Finance.DataProvider.ElementMovementDistribution), true)]
[assembly: EdmRelationshipAttribute("FinanceDBModel", "FK_ElementMovementDistributionElement", "Element", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Finance.DataProvider.Element), "ElementMovementDistribution", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Finance.DataProvider.ElementMovementDistribution), true)]

#endregion

namespace Finance.DataProvider
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class FinanceDBEntities : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new FinanceDBEntities object using the connection string found in the 'FinanceDBEntities' section of the application configuration file.
        /// </summary>
        public FinanceDBEntities() : base("name=FinanceDBEntities", "FinanceDBEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new FinanceDBEntities object.
        /// </summary>
        public FinanceDBEntities(string connectionString) : base(connectionString, "FinanceDBEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new FinanceDBEntities object.
        /// </summary>
        public FinanceDBEntities(EntityConnection connection) : base(connection, "FinanceDBEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Domain> Domains
        {
            get
            {
                if ((_Domains == null))
                {
                    _Domains = base.CreateObjectSet<Domain>("Domains");
                }
                return _Domains;
            }
        }
        private ObjectSet<Domain> _Domains;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Element> Elements
        {
            get
            {
                if ((_Elements == null))
                {
                    _Elements = base.CreateObjectSet<Element>("Elements");
                }
                return _Elements;
            }
        }
        private ObjectSet<Element> _Elements;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ElementType> ElementTypes
        {
            get
            {
                if ((_ElementTypes == null))
                {
                    _ElementTypes = base.CreateObjectSet<ElementType>("ElementTypes");
                }
                return _ElementTypes;
            }
        }
        private ObjectSet<ElementType> _ElementTypes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Version> Versions
        {
            get
            {
                if ((_Versions == null))
                {
                    _Versions = base.CreateObjectSet<Version>("Versions");
                }
                return _Versions;
            }
        }
        private ObjectSet<Version> _Versions;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<DailyData> DailyDatas
        {
            get
            {
                if ((_DailyDatas == null))
                {
                    _DailyDatas = base.CreateObjectSet<DailyData>("DailyDatas");
                }
                return _DailyDatas;
            }
        }
        private ObjectSet<DailyData> _DailyDatas;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Parameters> Parameters
        {
            get
            {
                if ((_Parameters == null))
                {
                    _Parameters = base.CreateObjectSet<Parameters>("Parameters");
                }
                return _Parameters;
            }
        }
        private ObjectSet<Parameters> _Parameters;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<FilesToProcess> FilesToProcess
        {
            get
            {
                if ((_FilesToProcess == null))
                {
                    _FilesToProcess = base.CreateObjectSet<FilesToProcess>("FilesToProcess");
                }
                return _FilesToProcess;
            }
        }
        private ObjectSet<FilesToProcess> _FilesToProcess;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ElementCorrelation> ElementCorrelation
        {
            get
            {
                if ((_ElementCorrelation == null))
                {
                    _ElementCorrelation = base.CreateObjectSet<ElementCorrelation>("ElementCorrelation");
                }
                return _ElementCorrelation;
            }
        }
        private ObjectSet<ElementCorrelation> _ElementCorrelation;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<DistributionRange> DistributionRanges
        {
            get
            {
                if ((_DistributionRanges == null))
                {
                    _DistributionRanges = base.CreateObjectSet<DistributionRange>("DistributionRanges");
                }
                return _DistributionRanges;
            }
        }
        private ObjectSet<DistributionRange> _DistributionRanges;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ElementMovementDistribution> ElementMovementDistributions
        {
            get
            {
                if ((_ElementMovementDistributions == null))
                {
                    _ElementMovementDistributions = base.CreateObjectSet<ElementMovementDistribution>("ElementMovementDistributions");
                }
                return _ElementMovementDistributions;
            }
        }
        private ObjectSet<ElementMovementDistribution> _ElementMovementDistributions;

        #endregion
        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Domains EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToDomains(Domain domain)
        {
            base.AddObject("Domains", domain);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Elements EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToElements(Element element)
        {
            base.AddObject("Elements", element);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ElementTypes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToElementTypes(ElementType elementType)
        {
            base.AddObject("ElementTypes", elementType);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Versions EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToVersions(Version version)
        {
            base.AddObject("Versions", version);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the DailyDatas EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToDailyDatas(DailyData dailyData)
        {
            base.AddObject("DailyDatas", dailyData);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Parameters EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToParameters(Parameters parameters)
        {
            base.AddObject("Parameters", parameters);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the FilesToProcess EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToFilesToProcess(FilesToProcess filesToProcess)
        {
            base.AddObject("FilesToProcess", filesToProcess);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ElementCorrelation EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToElementCorrelation(ElementCorrelation elementCorrelation)
        {
            base.AddObject("ElementCorrelation", elementCorrelation);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the DistributionRanges EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToDistributionRanges(DistributionRange distributionRange)
        {
            base.AddObject("DistributionRanges", distributionRange);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ElementMovementDistributions EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToElementMovementDistributions(ElementMovementDistribution elementMovementDistribution)
        {
            base.AddObject("ElementMovementDistributions", elementMovementDistribution);
        }

        #endregion
        #region Function Imports
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="itemTypeA">No Metadata Documentation available.</param>
        /// <param name="itemTypeB">No Metadata Documentation available.</param>
        /// <param name="periodType">No Metadata Documentation available.</param>
        public ObjectResult<ElementCorrelation> SelectCorrelationResults(Nullable<global::System.Int16> itemTypeA, Nullable<global::System.Int16> itemTypeB, Nullable<global::System.Byte> periodType)
        {
            ObjectParameter itemTypeAParameter;
            if (itemTypeA.HasValue)
            {
                itemTypeAParameter = new ObjectParameter("itemTypeA", itemTypeA);
            }
            else
            {
                itemTypeAParameter = new ObjectParameter("itemTypeA", typeof(global::System.Int16));
            }
    
            ObjectParameter itemTypeBParameter;
            if (itemTypeB.HasValue)
            {
                itemTypeBParameter = new ObjectParameter("itemTypeB", itemTypeB);
            }
            else
            {
                itemTypeBParameter = new ObjectParameter("itemTypeB", typeof(global::System.Int16));
            }
    
            ObjectParameter periodTypeParameter;
            if (periodType.HasValue)
            {
                periodTypeParameter = new ObjectParameter("periodType", periodType);
            }
            else
            {
                periodTypeParameter = new ObjectParameter("periodType", typeof(global::System.Byte));
            }
    
            return base.ExecuteFunction<ElementCorrelation>("SelectCorrelationResults", itemTypeAParameter, itemTypeBParameter, periodTypeParameter);
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="mergeOption"></param>
        /// <param name="itemTypeA">No Metadata Documentation available.</param>
        /// <param name="itemTypeB">No Metadata Documentation available.</param>
        /// <param name="periodType">No Metadata Documentation available.</param>
        public ObjectResult<ElementCorrelation> SelectCorrelationResults(Nullable<global::System.Int16> itemTypeA, Nullable<global::System.Int16> itemTypeB, Nullable<global::System.Byte> periodType, MergeOption mergeOption)
        {
            ObjectParameter itemTypeAParameter;
            if (itemTypeA.HasValue)
            {
                itemTypeAParameter = new ObjectParameter("itemTypeA", itemTypeA);
            }
            else
            {
                itemTypeAParameter = new ObjectParameter("itemTypeA", typeof(global::System.Int16));
            }
    
            ObjectParameter itemTypeBParameter;
            if (itemTypeB.HasValue)
            {
                itemTypeBParameter = new ObjectParameter("itemTypeB", itemTypeB);
            }
            else
            {
                itemTypeBParameter = new ObjectParameter("itemTypeB", typeof(global::System.Int16));
            }
    
            ObjectParameter periodTypeParameter;
            if (periodType.HasValue)
            {
                periodTypeParameter = new ObjectParameter("periodType", periodType);
            }
            else
            {
                periodTypeParameter = new ObjectParameter("periodType", typeof(global::System.Byte));
            }
    
            return base.ExecuteFunction<ElementCorrelation>("SelectCorrelationResults", mergeOption, itemTypeAParameter, itemTypeBParameter, periodTypeParameter);
        }

        #endregion
    }
    

    #endregion
    
    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="FinanceDBModel", Name="DailyData")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class DailyData : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new DailyData object.
        /// </summary>
        /// <param name="recId">Initial value of the RecId property.</param>
        /// <param name="ticker">Initial value of the Ticker property.</param>
        /// <param name="day">Initial value of the Day property.</param>
        /// <param name="volume">Initial value of the Volume property.</param>
        /// <param name="volumeValue">Initial value of the VolumeValue property.</param>
        public static DailyData CreateDailyData(global::System.Int64 recId, global::System.String ticker, global::System.DateTime day, global::System.Decimal volume, global::System.Decimal volumeValue)
        {
            DailyData dailyData = new DailyData();
            dailyData.RecId = recId;
            dailyData.Ticker = ticker;
            dailyData.Day = day;
            dailyData.Volume = volume;
            dailyData.VolumeValue = volumeValue;
            return dailyData;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 RecId
        {
            get
            {
                return _RecId;
            }
            set
            {
                if (_RecId != value)
                {
                    OnRecIdChanging(value);
                    ReportPropertyChanging("RecId");
                    _RecId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("RecId");
                    OnRecIdChanged();
                }
            }
        }
        private global::System.Int64 _RecId;
        partial void OnRecIdChanging(global::System.Int64 value);
        partial void OnRecIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Ticker
        {
            get
            {
                return _Ticker;
            }
            set
            {
                OnTickerChanging(value);
                ReportPropertyChanging("Ticker");
                _Ticker = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Ticker");
                OnTickerChanged();
            }
        }
        private global::System.String _Ticker;
        partial void OnTickerChanging(global::System.String value);
        partial void OnTickerChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime Day
        {
            get
            {
                return _Day;
            }
            set
            {
                OnDayChanging(value);
                ReportPropertyChanging("Day");
                _Day = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Day");
                OnDayChanged();
            }
        }
        private global::System.DateTime _Day;
        partial void OnDayChanging(global::System.DateTime value);
        partial void OnDayChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> OpenValue
        {
            get
            {
                return _OpenValue;
            }
            set
            {
                OnOpenValueChanging(value);
                ReportPropertyChanging("OpenValue");
                _OpenValue = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("OpenValue");
                OnOpenValueChanged();
            }
        }
        private Nullable<global::System.Decimal> _OpenValue;
        partial void OnOpenValueChanging(Nullable<global::System.Decimal> value);
        partial void OnOpenValueChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> CloseValue
        {
            get
            {
                return _CloseValue;
            }
            set
            {
                OnCloseValueChanging(value);
                ReportPropertyChanging("CloseValue");
                _CloseValue = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CloseValue");
                OnCloseValueChanged();
            }
        }
        private Nullable<global::System.Decimal> _CloseValue;
        partial void OnCloseValueChanging(Nullable<global::System.Decimal> value);
        partial void OnCloseValueChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> MinValue
        {
            get
            {
                return _MinValue;
            }
            set
            {
                OnMinValueChanging(value);
                ReportPropertyChanging("MinValue");
                _MinValue = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("MinValue");
                OnMinValueChanged();
            }
        }
        private Nullable<global::System.Decimal> _MinValue;
        partial void OnMinValueChanging(Nullable<global::System.Decimal> value);
        partial void OnMinValueChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> MaxValue
        {
            get
            {
                return _MaxValue;
            }
            set
            {
                OnMaxValueChanging(value);
                ReportPropertyChanging("MaxValue");
                _MaxValue = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("MaxValue");
                OnMaxValueChanged();
            }
        }
        private Nullable<global::System.Decimal> _MaxValue;
        partial void OnMaxValueChanging(Nullable<global::System.Decimal> value);
        partial void OnMaxValueChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal Volume
        {
            get
            {
                return _Volume;
            }
            set
            {
                OnVolumeChanging(value);
                ReportPropertyChanging("Volume");
                _Volume = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Volume");
                OnVolumeChanged();
            }
        }
        private global::System.Decimal _Volume;
        partial void OnVolumeChanging(global::System.Decimal value);
        partial void OnVolumeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal VolumeValue
        {
            get
            {
                return _VolumeValue;
            }
            set
            {
                OnVolumeValueChanging(value);
                ReportPropertyChanging("VolumeValue");
                _VolumeValue = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("VolumeValue");
                OnVolumeValueChanged();
            }
        }
        private global::System.Decimal _VolumeValue;
        partial void OnVolumeValueChanging(global::System.Decimal value);
        partial void OnVolumeValueChanged();

        #endregion
    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="FinanceDBModel", Name="DistributionRange")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class DistributionRange : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new DistributionRange object.
        /// </summary>
        /// <param name="recId">Initial value of the RecId property.</param>
        /// <param name="description">Initial value of the Description property.</param>
        /// <param name="dateFrom">Initial value of the DateFrom property.</param>
        /// <param name="dateTo">Initial value of the DateTo property.</param>
        /// <param name="density">Initial value of the Density property.</param>
        public static DistributionRange CreateDistributionRange(global::System.Int32 recId, global::System.String description, global::System.DateTime dateFrom, global::System.DateTime dateTo, global::System.Decimal density)
        {
            DistributionRange distributionRange = new DistributionRange();
            distributionRange.RecId = recId;
            distributionRange.Description = description;
            distributionRange.DateFrom = dateFrom;
            distributionRange.DateTo = dateTo;
            distributionRange.Density = density;
            return distributionRange;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 RecId
        {
            get
            {
                return _RecId;
            }
            set
            {
                if (_RecId != value)
                {
                    OnRecIdChanging(value);
                    ReportPropertyChanging("RecId");
                    _RecId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("RecId");
                    OnRecIdChanged();
                }
            }
        }
        private global::System.Int32 _RecId;
        partial void OnRecIdChanging(global::System.Int32 value);
        partial void OnRecIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime DateFrom
        {
            get
            {
                return _DateFrom;
            }
            set
            {
                OnDateFromChanging(value);
                ReportPropertyChanging("DateFrom");
                _DateFrom = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DateFrom");
                OnDateFromChanged();
            }
        }
        private global::System.DateTime _DateFrom;
        partial void OnDateFromChanging(global::System.DateTime value);
        partial void OnDateFromChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime DateTo
        {
            get
            {
                return _DateTo;
            }
            set
            {
                OnDateToChanging(value);
                ReportPropertyChanging("DateTo");
                _DateTo = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DateTo");
                OnDateToChanged();
            }
        }
        private global::System.DateTime _DateTo;
        partial void OnDateToChanging(global::System.DateTime value);
        partial void OnDateToChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal Density
        {
            get
            {
                return _Density;
            }
            set
            {
                OnDensityChanging(value);
                ReportPropertyChanging("Density");
                _Density = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Density");
                OnDensityChanged();
            }
        }
        private global::System.Decimal _Density;
        partial void OnDensityChanging(global::System.Decimal value);
        partial void OnDensityChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FinanceDBModel", "FK_ElementMovementDistributionRange", "ElementMovementDistribution")]
        public EntityCollection<ElementMovementDistribution> ElementMovementDistributions
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ElementMovementDistribution>("FinanceDBModel.FK_ElementMovementDistributionRange", "ElementMovementDistribution");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ElementMovementDistribution>("FinanceDBModel.FK_ElementMovementDistributionRange", "ElementMovementDistribution", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="FinanceDBModel", Name="Domain")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Domain : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Domain object.
        /// </summary>
        /// <param name="recId">Initial value of the RecId property.</param>
        /// <param name="description">Initial value of the Description property.</param>
        public static Domain CreateDomain(global::System.Int16 recId, global::System.String description)
        {
            Domain domain = new Domain();
            domain.RecId = recId;
            domain.Description = description;
            return domain;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int16 RecId
        {
            get
            {
                return _RecId;
            }
            set
            {
                if (_RecId != value)
                {
                    OnRecIdChanging(value);
                    ReportPropertyChanging("RecId");
                    _RecId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("RecId");
                    OnRecIdChanged();
                }
            }
        }
        private global::System.Int16 _RecId;
        partial void OnRecIdChanging(global::System.Int16 value);
        partial void OnRecIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FinanceDBModel", "FK_ElementElementDomain", "Element")]
        public EntityCollection<Element> Elements
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Element>("FinanceDBModel.FK_ElementElementDomain", "Element");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Element>("FinanceDBModel.FK_ElementElementDomain", "Element", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="FinanceDBModel", Name="Element")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Element : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Element object.
        /// </summary>
        /// <param name="symbol">Initial value of the Symbol property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="type">Initial value of the Type property.</param>
        /// <param name="domain">Initial value of the Domain property.</param>
        public static Element CreateElement(global::System.String symbol, global::System.String name, global::System.Int16 type, global::System.Int16 domain)
        {
            Element element = new Element();
            element.Symbol = symbol;
            element.Name = name;
            element.Type = type;
            element.Domain = domain;
            return element;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Symbol
        {
            get
            {
                return _Symbol;
            }
            set
            {
                if (_Symbol != value)
                {
                    OnSymbolChanging(value);
                    ReportPropertyChanging("Symbol");
                    _Symbol = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("Symbol");
                    OnSymbolChanged();
                }
            }
        }
        private global::System.String _Symbol;
        partial void OnSymbolChanging(global::System.String value);
        partial void OnSymbolChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int16 Type
        {
            get
            {
                return _Type;
            }
            set
            {
                OnTypeChanging(value);
                ReportPropertyChanging("Type");
                _Type = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Type");
                OnTypeChanged();
            }
        }
        private global::System.Int16 _Type;
        partial void OnTypeChanging(global::System.Int16 value);
        partial void OnTypeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int16 Domain
        {
            get
            {
                return _Domain;
            }
            set
            {
                OnDomainChanging(value);
                ReportPropertyChanging("Domain");
                _Domain = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Domain");
                OnDomainChanged();
            }
        }
        private global::System.Int16 _Domain;
        partial void OnDomainChanging(global::System.Int16 value);
        partial void OnDomainChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FinanceDBModel", "FK_ElementElementDomain", "Domain")]
        public Domain Domain1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Domain>("FinanceDBModel.FK_ElementElementDomain", "Domain").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Domain>("FinanceDBModel.FK_ElementElementDomain", "Domain").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Domain> Domain1Reference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Domain>("FinanceDBModel.FK_ElementElementDomain", "Domain");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Domain>("FinanceDBModel.FK_ElementElementDomain", "Domain", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FinanceDBModel", "FK_ElementElementType", "ElementType")]
        public ElementType ElementType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ElementType>("FinanceDBModel.FK_ElementElementType", "ElementType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ElementType>("FinanceDBModel.FK_ElementElementType", "ElementType").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<ElementType> ElementTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ElementType>("FinanceDBModel.FK_ElementElementType", "ElementType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<ElementType>("FinanceDBModel.FK_ElementElementType", "ElementType", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FinanceDBModel", "FK_ElementCorrelationElementA", "ElementCorrelation")]
        public EntityCollection<ElementCorrelation> ElementCorrelation
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ElementCorrelation>("FinanceDBModel.FK_ElementCorrelationElementA", "ElementCorrelation");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ElementCorrelation>("FinanceDBModel.FK_ElementCorrelationElementA", "ElementCorrelation", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FinanceDBModel", "FK_ElementCorrelationElementB", "ElementCorrelation")]
        public EntityCollection<ElementCorrelation> ElementCorrelation1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ElementCorrelation>("FinanceDBModel.FK_ElementCorrelationElementB", "ElementCorrelation");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ElementCorrelation>("FinanceDBModel.FK_ElementCorrelationElementB", "ElementCorrelation", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FinanceDBModel", "FK_ElementMovementDistributionElement", "ElementMovementDistribution")]
        public EntityCollection<ElementMovementDistribution> ElementMovementDistributions
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ElementMovementDistribution>("FinanceDBModel.FK_ElementMovementDistributionElement", "ElementMovementDistribution");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ElementMovementDistribution>("FinanceDBModel.FK_ElementMovementDistributionElement", "ElementMovementDistribution", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="FinanceDBModel", Name="ElementCorrelation")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ElementCorrelation : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ElementCorrelation object.
        /// </summary>
        /// <param name="tickerA">Initial value of the TickerA property.</param>
        /// <param name="tickerB">Initial value of the TickerB property.</param>
        /// <param name="correlation">Initial value of the Correlation property.</param>
        /// <param name="upd">Initial value of the Upd property.</param>
        /// <param name="periodType">Initial value of the PeriodType property.</param>
        public static ElementCorrelation CreateElementCorrelation(global::System.String tickerA, global::System.String tickerB, global::System.Decimal correlation, global::System.DateTime upd, global::System.Byte periodType)
        {
            ElementCorrelation elementCorrelation = new ElementCorrelation();
            elementCorrelation.TickerA = tickerA;
            elementCorrelation.TickerB = tickerB;
            elementCorrelation.Correlation = correlation;
            elementCorrelation.Upd = upd;
            elementCorrelation.PeriodType = periodType;
            return elementCorrelation;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String TickerA
        {
            get
            {
                return _TickerA;
            }
            set
            {
                if (_TickerA != value)
                {
                    OnTickerAChanging(value);
                    ReportPropertyChanging("TickerA");
                    _TickerA = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("TickerA");
                    OnTickerAChanged();
                }
            }
        }
        private global::System.String _TickerA;
        partial void OnTickerAChanging(global::System.String value);
        partial void OnTickerAChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String TickerB
        {
            get
            {
                return _TickerB;
            }
            set
            {
                if (_TickerB != value)
                {
                    OnTickerBChanging(value);
                    ReportPropertyChanging("TickerB");
                    _TickerB = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("TickerB");
                    OnTickerBChanged();
                }
            }
        }
        private global::System.String _TickerB;
        partial void OnTickerBChanging(global::System.String value);
        partial void OnTickerBChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal Correlation
        {
            get
            {
                return _Correlation;
            }
            set
            {
                OnCorrelationChanging(value);
                ReportPropertyChanging("Correlation");
                _Correlation = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Correlation");
                OnCorrelationChanged();
            }
        }
        private global::System.Decimal _Correlation;
        partial void OnCorrelationChanging(global::System.Decimal value);
        partial void OnCorrelationChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime Upd
        {
            get
            {
                return _Upd;
            }
            set
            {
                OnUpdChanging(value);
                ReportPropertyChanging("Upd");
                _Upd = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Upd");
                OnUpdChanged();
            }
        }
        private global::System.DateTime _Upd;
        partial void OnUpdChanging(global::System.DateTime value);
        partial void OnUpdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Byte PeriodType
        {
            get
            {
                return _PeriodType;
            }
            set
            {
                if (_PeriodType != value)
                {
                    OnPeriodTypeChanging(value);
                    ReportPropertyChanging("PeriodType");
                    _PeriodType = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("PeriodType");
                    OnPeriodTypeChanged();
                }
            }
        }
        private global::System.Byte _PeriodType;
        partial void OnPeriodTypeChanging(global::System.Byte value);
        partial void OnPeriodTypeChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FinanceDBModel", "FK_ElementCorrelationElementA", "Element")]
        public Element Element
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Element>("FinanceDBModel.FK_ElementCorrelationElementA", "Element").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Element>("FinanceDBModel.FK_ElementCorrelationElementA", "Element").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Element> ElementReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Element>("FinanceDBModel.FK_ElementCorrelationElementA", "Element");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Element>("FinanceDBModel.FK_ElementCorrelationElementA", "Element", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FinanceDBModel", "FK_ElementCorrelationElementB", "Element")]
        public Element Element1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Element>("FinanceDBModel.FK_ElementCorrelationElementB", "Element").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Element>("FinanceDBModel.FK_ElementCorrelationElementB", "Element").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Element> Element1Reference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Element>("FinanceDBModel.FK_ElementCorrelationElementB", "Element");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Element>("FinanceDBModel.FK_ElementCorrelationElementB", "Element", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="FinanceDBModel", Name="ElementMovementDistribution")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ElementMovementDistribution : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ElementMovementDistribution object.
        /// </summary>
        /// <param name="ticker">Initial value of the Ticker property.</param>
        /// <param name="rangeId">Initial value of the RangeId property.</param>
        /// <param name="distributionData">Initial value of the DistributionData property.</param>
        /// <param name="upd">Initial value of the Upd property.</param>
        public static ElementMovementDistribution CreateElementMovementDistribution(global::System.String ticker, global::System.Int32 rangeId, global::System.Byte[] distributionData, global::System.DateTime upd)
        {
            ElementMovementDistribution elementMovementDistribution = new ElementMovementDistribution();
            elementMovementDistribution.Ticker = ticker;
            elementMovementDistribution.RangeId = rangeId;
            elementMovementDistribution.DistributionData = distributionData;
            elementMovementDistribution.Upd = upd;
            return elementMovementDistribution;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Ticker
        {
            get
            {
                return _Ticker;
            }
            set
            {
                if (_Ticker != value)
                {
                    OnTickerChanging(value);
                    ReportPropertyChanging("Ticker");
                    _Ticker = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("Ticker");
                    OnTickerChanged();
                }
            }
        }
        private global::System.String _Ticker;
        partial void OnTickerChanging(global::System.String value);
        partial void OnTickerChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 RangeId
        {
            get
            {
                return _RangeId;
            }
            set
            {
                if (_RangeId != value)
                {
                    OnRangeIdChanging(value);
                    ReportPropertyChanging("RangeId");
                    _RangeId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("RangeId");
                    OnRangeIdChanged();
                }
            }
        }
        private global::System.Int32 _RangeId;
        partial void OnRangeIdChanging(global::System.Int32 value);
        partial void OnRangeIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Byte[] DistributionData
        {
            get
            {
                return StructuralObject.GetValidValue(_DistributionData);
            }
            set
            {
                OnDistributionDataChanging(value);
                ReportPropertyChanging("DistributionData");
                _DistributionData = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("DistributionData");
                OnDistributionDataChanged();
            }
        }
        private global::System.Byte[] _DistributionData;
        partial void OnDistributionDataChanging(global::System.Byte[] value);
        partial void OnDistributionDataChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime Upd
        {
            get
            {
                return _Upd;
            }
            set
            {
                OnUpdChanging(value);
                ReportPropertyChanging("Upd");
                _Upd = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Upd");
                OnUpdChanged();
            }
        }
        private global::System.DateTime _Upd;
        partial void OnUpdChanging(global::System.DateTime value);
        partial void OnUpdChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FinanceDBModel", "FK_ElementMovementDistributionRange", "DistributionRange")]
        public DistributionRange DistributionRange
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<DistributionRange>("FinanceDBModel.FK_ElementMovementDistributionRange", "DistributionRange").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<DistributionRange>("FinanceDBModel.FK_ElementMovementDistributionRange", "DistributionRange").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<DistributionRange> DistributionRangeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<DistributionRange>("FinanceDBModel.FK_ElementMovementDistributionRange", "DistributionRange");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<DistributionRange>("FinanceDBModel.FK_ElementMovementDistributionRange", "DistributionRange", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FinanceDBModel", "FK_ElementMovementDistributionElement", "Element")]
        public Element Element
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Element>("FinanceDBModel.FK_ElementMovementDistributionElement", "Element").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Element>("FinanceDBModel.FK_ElementMovementDistributionElement", "Element").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Element> ElementReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Element>("FinanceDBModel.FK_ElementMovementDistributionElement", "Element");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Element>("FinanceDBModel.FK_ElementMovementDistributionElement", "Element", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="FinanceDBModel", Name="ElementType")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ElementType : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ElementType object.
        /// </summary>
        /// <param name="recId">Initial value of the RecId property.</param>
        /// <param name="description">Initial value of the Description property.</param>
        public static ElementType CreateElementType(global::System.Int16 recId, global::System.String description)
        {
            ElementType elementType = new ElementType();
            elementType.RecId = recId;
            elementType.Description = description;
            return elementType;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int16 RecId
        {
            get
            {
                return _RecId;
            }
            set
            {
                if (_RecId != value)
                {
                    OnRecIdChanging(value);
                    ReportPropertyChanging("RecId");
                    _RecId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("RecId");
                    OnRecIdChanged();
                }
            }
        }
        private global::System.Int16 _RecId;
        partial void OnRecIdChanging(global::System.Int16 value);
        partial void OnRecIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FinanceDBModel", "FK_ElementElementType", "Element")]
        public EntityCollection<Element> Elements
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Element>("FinanceDBModel.FK_ElementElementType", "Element");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Element>("FinanceDBModel.FK_ElementElementType", "Element", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="FinanceDBModel", Name="FilesToProcess")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class FilesToProcess : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new FilesToProcess object.
        /// </summary>
        /// <param name="recId">Initial value of the RecId property.</param>
        /// <param name="source">Initial value of the Source property.</param>
        /// <param name="fileData">Initial value of the FileData property.</param>
        /// <param name="upd">Initial value of the Upd property.</param>
        /// <param name="fileType">Initial value of the FileType property.</param>
        public static FilesToProcess CreateFilesToProcess(global::System.Int32 recId, global::System.String source, global::System.Byte[] fileData, global::System.DateTime upd, global::System.Byte fileType)
        {
            FilesToProcess filesToProcess = new FilesToProcess();
            filesToProcess.RecId = recId;
            filesToProcess.Source = source;
            filesToProcess.FileData = fileData;
            filesToProcess.Upd = upd;
            filesToProcess.FileType = fileType;
            return filesToProcess;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 RecId
        {
            get
            {
                return _RecId;
            }
            set
            {
                if (_RecId != value)
                {
                    OnRecIdChanging(value);
                    ReportPropertyChanging("RecId");
                    _RecId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("RecId");
                    OnRecIdChanged();
                }
            }
        }
        private global::System.Int32 _RecId;
        partial void OnRecIdChanging(global::System.Int32 value);
        partial void OnRecIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Source
        {
            get
            {
                return _Source;
            }
            set
            {
                OnSourceChanging(value);
                ReportPropertyChanging("Source");
                _Source = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Source");
                OnSourceChanged();
            }
        }
        private global::System.String _Source;
        partial void OnSourceChanging(global::System.String value);
        partial void OnSourceChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Byte[] FileData
        {
            get
            {
                return StructuralObject.GetValidValue(_FileData);
            }
            set
            {
                OnFileDataChanging(value);
                ReportPropertyChanging("FileData");
                _FileData = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("FileData");
                OnFileDataChanged();
            }
        }
        private global::System.Byte[] _FileData;
        partial void OnFileDataChanging(global::System.Byte[] value);
        partial void OnFileDataChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime Upd
        {
            get
            {
                return _Upd;
            }
            set
            {
                OnUpdChanging(value);
                ReportPropertyChanging("Upd");
                _Upd = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Upd");
                OnUpdChanged();
            }
        }
        private global::System.DateTime _Upd;
        partial void OnUpdChanging(global::System.DateTime value);
        partial void OnUpdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Byte FileType
        {
            get
            {
                return _FileType;
            }
            set
            {
                OnFileTypeChanging(value);
                ReportPropertyChanging("FileType");
                _FileType = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FileType");
                OnFileTypeChanged();
            }
        }
        private global::System.Byte _FileType;
        partial void OnFileTypeChanging(global::System.Byte value);
        partial void OnFileTypeChanged();

        #endregion
    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="FinanceDBModel", Name="Parameters")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Parameters : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Parameters object.
        /// </summary>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="value">Initial value of the Value property.</param>
        public static Parameters CreateParameters(global::System.String name, global::System.String value)
        {
            Parameters parameters = new Parameters();
            parameters.Name = name;
            parameters.Value = value;
            return parameters;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                if (_Name != value)
                {
                    OnNameChanging(value);
                    ReportPropertyChanging("Name");
                    _Name = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("Name");
                    OnNameChanged();
                }
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Value
        {
            get
            {
                return _Value;
            }
            set
            {
                OnValueChanging(value);
                ReportPropertyChanging("Value");
                _Value = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Value");
                OnValueChanged();
            }
        }
        private global::System.String _Value;
        partial void OnValueChanging(global::System.String value);
        partial void OnValueChanged();

        #endregion
    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="FinanceDBModel", Name="Version")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Version : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Version object.
        /// </summary>
        /// <param name="recID">Initial value of the RecID property.</param>
        /// <param name="version1">Initial value of the Version1 property.</param>
        /// <param name="description">Initial value of the Description property.</param>
        /// <param name="upd">Initial value of the Upd property.</param>
        public static Version CreateVersion(global::System.Int32 recID, global::System.String version1, global::System.String description, global::System.DateTime upd)
        {
            Version version = new Version();
            version.RecID = recID;
            version.Version1 = version1;
            version.Description = description;
            version.Upd = upd;
            return version;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 RecID
        {
            get
            {
                return _RecID;
            }
            set
            {
                if (_RecID != value)
                {
                    OnRecIDChanging(value);
                    ReportPropertyChanging("RecID");
                    _RecID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("RecID");
                    OnRecIDChanged();
                }
            }
        }
        private global::System.Int32 _RecID;
        partial void OnRecIDChanging(global::System.Int32 value);
        partial void OnRecIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Version1
        {
            get
            {
                return _Version1;
            }
            set
            {
                OnVersion1Changing(value);
                ReportPropertyChanging("Version1");
                _Version1 = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Version1");
                OnVersion1Changed();
            }
        }
        private global::System.String _Version1;
        partial void OnVersion1Changing(global::System.String value);
        partial void OnVersion1Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime Upd
        {
            get
            {
                return _Upd;
            }
            set
            {
                OnUpdChanging(value);
                ReportPropertyChanging("Upd");
                _Upd = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Upd");
                OnUpdChanged();
            }
        }
        private global::System.DateTime _Upd;
        partial void OnUpdChanging(global::System.DateTime value);
        partial void OnUpdChanged();

        #endregion
    
    }

    #endregion
    
}
