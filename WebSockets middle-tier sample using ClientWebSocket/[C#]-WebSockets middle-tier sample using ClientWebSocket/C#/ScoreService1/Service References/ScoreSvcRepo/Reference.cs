//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.17626
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ScoreService1.ScoreSvcRepo {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ScoreSvcRepo.IScoreSvcRepo")]
    public interface IScoreSvcRepo {
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IScoreSvcRepo/AddToServiceRepo")]
        void AddToServiceRepo(string uri);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IScoreSvcRepo/AddToServiceRepo")]
        System.Threading.Tasks.Task AddToServiceRepoAsync(string uri);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IScoreSvcRepo/RemoveFromServiceRepo")]
        void RemoveFromServiceRepo(string uri);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IScoreSvcRepo/RemoveFromServiceRepo")]
        System.Threading.Tasks.Task RemoveFromServiceRepoAsync(string uri);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IScoreSvcRepo/GetScoreServicesRepoInfo", ReplyAction="http://tempuri.org/IScoreSvcRepo/GetScoreServicesRepoInfoResponse")]
        string[] GetScoreServicesRepoInfo();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IScoreSvcRepo/GetScoreServicesRepoInfo", ReplyAction="http://tempuri.org/IScoreSvcRepo/GetScoreServicesRepoInfoResponse")]
        System.Threading.Tasks.Task<string[]> GetScoreServicesRepoInfoAsync();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IScoreSvcRepoChannel : ScoreService1.ScoreSvcRepo.IScoreSvcRepo, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ScoreSvcRepoClient : System.ServiceModel.ClientBase<ScoreService1.ScoreSvcRepo.IScoreSvcRepo>, ScoreService1.ScoreSvcRepo.IScoreSvcRepo {
        
        public ScoreSvcRepoClient() {
        }
        
        public ScoreSvcRepoClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ScoreSvcRepoClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ScoreSvcRepoClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ScoreSvcRepoClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public void AddToServiceRepo(string uri) {
            base.Channel.AddToServiceRepo(uri);
        }
        
        public System.Threading.Tasks.Task AddToServiceRepoAsync(string uri) {
            return base.Channel.AddToServiceRepoAsync(uri);
        }
        
        public void RemoveFromServiceRepo(string uri) {
            base.Channel.RemoveFromServiceRepo(uri);
        }
        
        public System.Threading.Tasks.Task RemoveFromServiceRepoAsync(string uri) {
            return base.Channel.RemoveFromServiceRepoAsync(uri);
        }
        
        public string[] GetScoreServicesRepoInfo() {
            return base.Channel.GetScoreServicesRepoInfo();
        }
        
        public System.Threading.Tasks.Task<string[]> GetScoreServicesRepoInfoAsync() {
            return base.Channel.GetScoreServicesRepoInfoAsync();
        }
    }
}
