<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="button_workflowform_cancel" xml:space="preserve">
    <value>Cancel</value>
  </data>
  <data name="button_workflowform_save" xml:space="preserve">
    <value>Save</value>
  </data>
  <data name="label_workflowinitform_approvers" xml:space="preserve">
    <value>Approvers</value>
  </data>
  <data name="label_workflowinitform_approvers_description" xml:space="preserve">
    <value>Enter the names of the people to whom the workflow will assign tasks, and choose the order in which those tasks are assigned. Separate them with semicolons. You can also add stages to assign tasks to more people in different orders.</value>
  </data>
  <data name="label_workflowinitform_duration" xml:space="preserve">
    <value>Due Date Duration (Days)</value>
  </data>
  <data name="label_workflowinitform_duration_description" xml:space="preserve">
    <value>The amount of days until a task is due.</value>
  </data>
  <data name="label_workflowinitform_enablecontentapproval" xml:space="preserve">
    <value>Enable Content Approval</value>
  </data>
  <data name="label_workflowinitform_enablecontentapproval_description" xml:space="preserve">
    <value>Update the approval status after the workflow is completed (use this workflow to control content approval).</value>
  </data>
  <data name="label_workflowinitform_endondocumentchange" xml:space="preserve">
    <value>End on Document Change</value>
  </data>
  <data name="label_workflowinitform_endondocumentchange_description" xml:space="preserve">
    <value>Automatically reject the document if it is changed before the workflow is completed.</value>
  </data>
  <data name="label_workflowinitform_endonfirstapproval" xml:space="preserve">
    <value>End on First Approval</value>
  </data>
  <data name="label_workflowinitform_endonfirstapproval_description" xml:space="preserve">
    <value>Automatically reject the document if it is rejected by any participant.</value>
  </data>
  <data name="label_workflowinitform_taskassignmentemailbodyhtml" xml:space="preserve">
    <value>Task Assignment Email Body (Html)</value>
  </data>
  <data name="label_workflowinitform_taskassignmentemailsubject" xml:space="preserve">
    <value>Task Assignment Email Subject</value>
  </data>
  <data name="label_workflowinitform_taskcancellationemailbodyhtml" xml:space="preserve">
    <value>Task Cancellation Email Body (Html)</value>
  </data>
  <data name="label_workflowinitform_taskcancellationemailsubject" xml:space="preserve">
    <value>Task Cancellation Email Subject</value>
  </data>
  <data name="label_workflowinitform_taskoverdueemailbodyhtml" xml:space="preserve">
    <value>Task Overdue Email Body (HTML)</value>
  </data>
  <data name="label_workflowinitform_taskoverdueemailsubject" xml:space="preserve">
    <value>Task Overdue Email Subject</value>
  </data>
  <data name="label_workflowinitform_tasktitle" xml:space="preserve">
    <value>Task Title</value>
  </data>
  <data name="workflow_ApprovalTaskAssignedEmailBodyHtml" xml:space="preserve">
    <value>&lt;div style='font-size:11pt;font-family:Segoe UI Light,sans-serif;color:#444444;'&gt;&lt;div&gt;&lt;span style='font-size:13.5pt'&gt;You have a new {0} task assigned.&lt;/span&gt;&lt;/div&gt;&lt;div style='MARGIN-TOP: 14pt; MARGIN-BOTTOM: 14pt; font-size:11pt;font-family:Segoe UI Light,sans-serif;color:#444444;'&gt;Due by {1}&lt;br /&gt;&lt;hr /&gt;&lt;br/&gt;To complete this task:&lt;br /&gt;&lt;ol&gt;&lt;li&gt;Review &lt;a href='{2}'&gt;{3}&lt;/a&gt;&lt;/li&gt;&lt;li&gt;Perform the specific activities required for this task.&lt;/li&gt;&lt;li&gt;Use the &lt;b&gt;Open this task&lt;/b&gt; button to mark the task as completed. (If you cannot update this task, you might not have access to it.)&lt;/li&gt;&lt;/ol&gt;&lt;/div&gt;      &lt;/div&gt;</value>
    <comment>Please make sure the tokens are not removed</comment>
  </data>
  <data name="workflow_ApprovalTaskAssignedEmailSubject" xml:space="preserve">
    <value>{0} Approval Task Assigned</value>
    <comment>Please make sure the tokens are not removed</comment>
  </data>
  <data name="workflow_ApprovalTaskCancelledEmailBodyHtml" xml:space="preserve">
    <value>&lt;div style='font-size:11pt;font-family:Segoe UI Light,sans-serif;color:#444444;'&gt;&lt;div&gt;&lt;span style='font-size:13.5pt'&gt;One of your tasks was canceled and deleted. You do not need to take any further action on that task.&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;</value>
    <comment>Please make sure the tokens are not removed</comment>
  </data>
  <data name="workflow_ApprovalTaskCancelledEmailSubject" xml:space="preserve">
    <value>{0} Approval Task Cancelled</value>
    <comment>Please make sure the tokens are not removed</comment>
  </data>
  <data name="workflow_ApprovalTaskDefaultTitle" xml:space="preserve">
    <value>{0} Approval Task</value>
    <comment>Please make sure the tokens are not removed</comment>
  </data>
  <data name="workflow_ApprovalTaskOverdueEmailBodyHtml" xml:space="preserve">
    <value>&lt;div style='font-size:11pt;font-family:Segoe UI Light,sans-serif;color:#444444;'&gt;&lt;div&gt;&lt;span style='font-size:13.5pt'&gt;You have a {0} &lt;/span&gt;&lt;span style='font-size:13.5pt;color:#ff3b3b;'&gt;overdue&lt;/span&gt;&lt;span style=‘font-size:13.5pt’&gt; task.&lt;/span&gt;&lt;/div&gt;&lt;hr /&gt;&lt;br/&gt;To complete this task:&lt;br /&gt;&lt;ol&gt;&lt;li&gt;Review &lt;a href='{1}'&gt;{2}&lt;/a&gt;&lt;/li&gt;&lt;li&gt;Perform the specific activities required for this task.&lt;/li&gt;&lt;li&gt;Use the &lt;b&gt;Open this task&lt;/b&gt; button to mark the task as completed. (If you cannot update this task, you might not have access to it.)&lt;/li&gt;&lt;/ol&gt;&lt;/div&gt;&lt;/div&gt;</value>
    <comment>Please make sure the tokens are not removed</comment>
  </data>
  <data name="workflow_ApprovalTaskOverdueEmailSubject" xml:space="preserve">
    <value>{0} Publising Approval Task Overdue</value>
    <comment>Please make sure the tokens are not removed</comment>
  </data>
  <data name="workflow_approvaltaskstatus_cancelled" xml:space="preserve">
    <value>Cancelled</value>
  </data>
  <data name="workflow_approvaltaskstatus_completed" xml:space="preserve">
    <value>Completed</value>
    <comment>Must match the SharePoint out of the box value</comment>
  </data>
  <data name="workflow_approvaltaskstatus_inprogress" xml:space="preserve">
    <value>In Progress</value>
  </data>
  <data name="workflow_approval_description" xml:space="preserve">
    <value>SharePoint 2013 custom approval workflow (Declarative)</value>
  </data>
  <data name="workflow_approval_instancename" xml:space="preserve">
    <value>Approval</value>
  </data>
  <data name="workflow_approval_name" xml:space="preserve">
    <value>Approval Workflow (2013)</value>
  </data>
  <data name="page_workflowinit_title" xml:space="preserve">
    <value>Approval Workflow Association</value>
  </data>
</root>