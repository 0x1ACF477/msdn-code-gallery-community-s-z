// =====================================================================
//  This file is part of the Microsoft Dynamics CRM SDK code samples.
//
//  Copyright (C) Microsoft Corporation.  All rights reserved.
//
//  This source code is intended only as a supplement to Microsoft
//  Development Tools and/or on-line documentation.  See these other
//  materials for detailed information regarding Microsoft code samples.
//
//  THIS CODE AND INFORMATION ARE PROVIDED "AS IS" WITHOUT WARRANTY OF ANY
//  KIND, EITHER EXPRESSED OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE
//  IMPLIED WARRANTIES OF MERCHANTABILITY AND/OR FITNESS FOR A
//  PARTICULAR PURPOSE.
// =====================================================================
Sdk = window.Sdk || { __namespace: !0 }; Sdk.md = window.Sdk.md || { __namespace: !0 }; Sdk.md.Account = { AccountCategoryCode: { Name: "AccountCategoryCode", AttributeType: Sdk.OptionSet }, AccountClassificationCode: { Name: "AccountClassificationCode", AttributeType: Sdk.OptionSet }, AccountId: { Name: "AccountId", AttributeType: Sdk.Guid }, AccountNumber: { Name: "AccountNumber", AttributeType: Sdk.String }, AccountRatingCode: { Name: "AccountRatingCode", AttributeType: Sdk.OptionSet }, Address1_AddressId: { Name: "Address1_AddressId", AttributeType: Sdk.Guid }, Address1_AddressTypeCode: { Name: "Address1_AddressTypeCode", AttributeType: Sdk.OptionSet }, Address1_City: { Name: "Address1_City", AttributeType: Sdk.String }, Address1_Composite: { Name: "Address1_Composite", AttributeType: Sdk.String }, Address1_Country: { Name: "Address1_Country", AttributeType: Sdk.String }, Address1_County: { Name: "Address1_County", AttributeType: Sdk.String }, Address1_Fax: { Name: "Address1_Fax", AttributeType: Sdk.String }, Address1_FreightTermsCode: { Name: "Address1_FreightTermsCode", AttributeType: Sdk.OptionSet }, Address1_Latitude: { Name: "Address1_Latitude", AttributeType: Sdk.Double }, Address1_Line1: { Name: "Address1_Line1", AttributeType: Sdk.String }, Address1_Line2: { Name: "Address1_Line2", AttributeType: Sdk.String }, Address1_Line3: { Name: "Address1_Line3", AttributeType: Sdk.String }, Address1_Longitude: { Name: "Address1_Longitude", AttributeType: Sdk.Double }, Address1_Name: { Name: "Address1_Name", AttributeType: Sdk.String }, Address1_PostalCode: { Name: "Address1_PostalCode", AttributeType: Sdk.String }, Address1_PostOfficeBox: { Name: "Address1_PostOfficeBox", AttributeType: Sdk.String }, Address1_PrimaryContactName: { Name: "Address1_PrimaryContactName", AttributeType: Sdk.String }, Address1_ShippingMethodCode: { Name: "Address1_ShippingMethodCode", AttributeType: Sdk.OptionSet }, Address1_StateOrProvince: { Name: "Address1_StateOrProvince", AttributeType: Sdk.String }, Address1_Telephone1: { Name: "Address1_Telephone1", AttributeType: Sdk.String }, Address1_Telephone2: { Name: "Address1_Telephone2", AttributeType: Sdk.String }, Address1_Telephone3: { Name: "Address1_Telephone3", AttributeType: Sdk.String }, Address1_UPSZone: { Name: "Address1_UPSZone", AttributeType: Sdk.String }, Address1_UTCOffset: { Name: "Address1_UTCOffset", AttributeType: Sdk.Int }, Address2_AddressId: { Name: "Address2_AddressId", AttributeType: Sdk.Guid }, Address2_AddressTypeCode: { Name: "Address2_AddressTypeCode", AttributeType: Sdk.OptionSet }, Address2_City: { Name: "Address2_City", AttributeType: Sdk.String }, Address2_Composite: { Name: "Address2_Composite", AttributeType: Sdk.String }, Address2_Country: { Name: "Address2_Country", AttributeType: Sdk.String }, Address2_County: { Name: "Address2_County", AttributeType: Sdk.String }, Address2_Fax: { Name: "Address2_Fax", AttributeType: Sdk.String }, Address2_FreightTermsCode: { Name: "Address2_FreightTermsCode", AttributeType: Sdk.OptionSet }, Address2_Latitude: { Name: "Address2_Latitude", AttributeType: Sdk.Double }, Address2_Line1: { Name: "Address2_Line1", AttributeType: Sdk.String }, Address2_Line2: { Name: "Address2_Line2", AttributeType: Sdk.String }, Address2_Line3: { Name: "Address2_Line3", AttributeType: Sdk.String }, Address2_Longitude: { Name: "Address2_Longitude", AttributeType: Sdk.Double }, Address2_Name: { Name: "Address2_Name", AttributeType: Sdk.String }, Address2_PostalCode: { Name: "Address2_PostalCode", AttributeType: Sdk.String }, Address2_PostOfficeBox: { Name: "Address2_PostOfficeBox", AttributeType: Sdk.String }, Address2_PrimaryContactName: { Name: "Address2_PrimaryContactName", AttributeType: Sdk.String }, Address2_ShippingMethodCode: { Name: "Address2_ShippingMethodCode", AttributeType: Sdk.OptionSet }, Address2_StateOrProvince: { Name: "Address2_StateOrProvince", AttributeType: Sdk.String }, Address2_Telephone1: { Name: "Address2_Telephone1", AttributeType: Sdk.String }, Address2_Telephone2: { Name: "Address2_Telephone2", AttributeType: Sdk.String }, Address2_Telephone3: { Name: "Address2_Telephone3", AttributeType: Sdk.String }, Address2_UPSZone: { Name: "Address2_UPSZone", AttributeType: Sdk.String }, Address2_UTCOffset: { Name: "Address2_UTCOffset", AttributeType: Sdk.Int }, Aging30: { Name: "Aging30", AttributeType: Sdk.Money }, Aging30_Base: { Name: "Aging30_Base", AttributeType: Sdk.Money }, Aging60: { Name: "Aging60", AttributeType: Sdk.Money }, Aging60_Base: { Name: "Aging60_Base", AttributeType: Sdk.Money }, Aging90: { Name: "Aging90", AttributeType: Sdk.Money }, Aging90_Base: { Name: "Aging90_Base", AttributeType: Sdk.Money }, BusinessTypeCode: { Name: "BusinessTypeCode", AttributeType: Sdk.OptionSet }, CreatedBy: { Name: "CreatedBy", AttributeType: Sdk.Lookup }, CreatedOn: { Name: "CreatedOn", AttributeType: Sdk.DateTime }, CreatedOnBehalfBy: { Name: "CreatedOnBehalfBy", AttributeType: Sdk.Lookup }, CreditLimit: { Name: "CreditLimit", AttributeType: Sdk.Money }, CreditLimit_Base: { Name: "CreditLimit_Base", AttributeType: Sdk.Money }, CreditOnHold: { Name: "CreditOnHold", AttributeType: Sdk.Boolean }, CustomerSizeCode: { Name: "CustomerSizeCode", AttributeType: Sdk.OptionSet }, CustomerTypeCode: { Name: "CustomerTypeCode", AttributeType: Sdk.OptionSet }, DefaultPriceLevelId: { Name: "DefaultPriceLevelId", AttributeType: Sdk.Lookup }, Description: { Name: "Description", AttributeType: Sdk.String }, DoNotBulkEMail: { Name: "DoNotBulkEMail", AttributeType: Sdk.Boolean }, DoNotBulkPostalMail: { Name: "DoNotBulkPostalMail", AttributeType: Sdk.Boolean }, DoNotEMail: { Name: "DoNotEMail", AttributeType: Sdk.Boolean }, DoNotFax: { Name: "DoNotFax", AttributeType: Sdk.Boolean }, DoNotPhone: { Name: "DoNotPhone", AttributeType: Sdk.Boolean }, DoNotPostalMail: { Name: "DoNotPostalMail", AttributeType: Sdk.Boolean }, DoNotSendMM: { Name: "DoNotSendMM", AttributeType: Sdk.Boolean }, EMailAddress1: { Name: "EMailAddress1", AttributeType: Sdk.String }, EMailAddress2: { Name: "EMailAddress2", AttributeType: Sdk.String }, EMailAddress3: { Name: "EMailAddress3", AttributeType: Sdk.String }, EntityImageId: { Name: "EntityImageId", AttributeType: Sdk.Guid }, ExchangeRate: { Name: "ExchangeRate", AttributeType: Sdk.Decimal }, Fax: { Name: "Fax", AttributeType: Sdk.String }, FtpSiteURL: { Name: "FtpSiteURL", AttributeType: Sdk.String }, ImportSequenceNumber: { Name: "ImportSequenceNumber", AttributeType: Sdk.Int }, IndustryCode: { Name: "IndustryCode", AttributeType: Sdk.OptionSet }, IsPrivate: { Name: "IsPrivate", AttributeType: Sdk.Boolean }, LastUsedInCampaign: { Name: "LastUsedInCampaign", AttributeType: Sdk.DateTime }, MarketCap: { Name: "MarketCap", AttributeType: Sdk.Money }, MarketCap_Base: { Name: "MarketCap_Base", AttributeType: Sdk.Money }, MasterId: { Name: "MasterId", AttributeType: Sdk.Lookup }, Merged: { Name: "Merged", AttributeType: Sdk.Boolean }, ModifiedBy: { Name: "ModifiedBy", AttributeType: Sdk.Lookup }, ModifiedOn: { Name: "ModifiedOn", AttributeType: Sdk.DateTime }, ModifiedOnBehalfBy: { Name: "ModifiedOnBehalfBy", AttributeType: Sdk.Lookup }, Name: { Name: "Name", AttributeType: Sdk.String }, NumberOfEmployees: { Name: "NumberOfEmployees", AttributeType: Sdk.Int }, OriginatingLeadId: { Name: "OriginatingLeadId", AttributeType: Sdk.Lookup }, OverriddenCreatedOn: { Name: "OverriddenCreatedOn", AttributeType: Sdk.DateTime }, OwnerId: { Name: "OwnerId", AttributeType: Sdk.Lookup }, OwnershipCode: { Name: "OwnershipCode", AttributeType: Sdk.OptionSet }, OwningBusinessUnit: { Name: "OwningBusinessUnit", AttributeType: Sdk.Lookup }, OwningTeam: { Name: "OwningTeam", AttributeType: Sdk.Lookup }, OwningUser: { Name: "OwningUser", AttributeType: Sdk.Lookup }, ParentAccountId: { Name: "ParentAccountId", AttributeType: Sdk.Lookup }, ParticipatesInWorkflow: { Name: "ParticipatesInWorkflow", AttributeType: Sdk.Boolean }, PaymentTermsCode: { Name: "PaymentTermsCode", AttributeType: Sdk.OptionSet }, PreferredAppointmentDayCode: { Name: "PreferredAppointmentDayCode", AttributeType: Sdk.OptionSet }, PreferredAppointmentTimeCode: { Name: "PreferredAppointmentTimeCode", AttributeType: Sdk.OptionSet }, PreferredContactMethodCode: { Name: "PreferredContactMethodCode", AttributeType: Sdk.OptionSet }, PreferredEquipmentId: { Name: "PreferredEquipmentId", AttributeType: Sdk.Lookup }, PreferredServiceId: { Name: "PreferredServiceId", AttributeType: Sdk.Lookup }, PreferredSystemUserId: { Name: "PreferredSystemUserId", AttributeType: Sdk.Lookup }, PrimaryContactId: { Name: "PrimaryContactId", AttributeType: Sdk.Lookup }, ProcessId: { Name: "ProcessId", AttributeType: Sdk.Guid }, Revenue: { Name: "Revenue", AttributeType: Sdk.Money }, Revenue_Base: { Name: "Revenue_Base", AttributeType: Sdk.Money }, SharesOutstanding: { Name: "SharesOutstanding", AttributeType: Sdk.Int }, ShippingMethodCode: { Name: "ShippingMethodCode", AttributeType: Sdk.OptionSet }, SIC: { Name: "SIC", AttributeType: Sdk.String }, StageId: { Name: "StageId", AttributeType: Sdk.Guid }, StateCode: { Name: "StateCode", AttributeType: Sdk.OptionSet }, StatusCode: { Name: "StatusCode", AttributeType: Sdk.OptionSet }, StockExchange: { Name: "StockExchange", AttributeType: Sdk.String }, Telephone1: { Name: "Telephone1", AttributeType: Sdk.String }, Telephone2: { Name: "Telephone2", AttributeType: Sdk.String }, Telephone3: { Name: "Telephone3", AttributeType: Sdk.String }, TerritoryCode: { Name: "TerritoryCode", AttributeType: Sdk.OptionSet }, TerritoryId: { Name: "TerritoryId", AttributeType: Sdk.Lookup }, TickerSymbol: { Name: "TickerSymbol", AttributeType: Sdk.String }, TimeZoneRuleVersionNumber: { Name: "TimeZoneRuleVersionNumber", AttributeType: Sdk.Int }, TransactionCurrencyId: { Name: "TransactionCurrencyId", AttributeType: Sdk.Lookup }, UTCConversionTimeZoneCode: { Name: "UTCConversionTimeZoneCode", AttributeType: Sdk.Int }, VersionNumber: { Name: "VersionNumber", AttributeType: Sdk.Long }, WebSiteURL: { Name: "WebSiteURL", AttributeType: Sdk.String }, YomiName: { Name: "YomiName", AttributeType: Sdk.String } }, function () { this.Account = function (n) { if (!(this instanceof Sdk.Account)) return new Sdk.Account(n); if (Sdk.Entity.call(this), this.setType("account"), typeof n != "undefined" && n != null) if (n instanceof Sdk.Entity) if (n.getType() == this.getType()) this.setAttributes(n.getAttributes()), this.setFormattedValues(n.getFormattedValues()), this.setRelatedEntities(n.getRelatedEntities()), n.getId() != null && this.setId(n.getId()); else throw new Error("Invalid type Sdk.Account entity constructor parameter must be an Sdk.Entity of Type account"); else throw new Error("Invalid argument Sdk.Account entity constructor parameter must be an Sdk.Entity"); this.initializeSubClass(Sdk.md.Account) } }.call(Sdk); Sdk.Account.prototype = new Sdk.Entity("account"), function () { this.OneToMany = { account_activity_parties: "account_activity_parties", Account_ActivityPointers: "Account_ActivityPointers", Account_Annotation: "Account_Annotation", Account_Appointments: "Account_Appointments", Account_AsyncOperations: "Account_AsyncOperations", Account_BulkDeleteFailures: "Account_BulkDeleteFailures", account_connections1: "account_connections1", account_connections2: "account_connections2", account_customer_opportunity_roles: "account_customer_opportunity_roles", account_customer_relationship_customer: "account_customer_relationship_customer", account_customer_relationship_partner: "account_customer_relationship_partner", Account_CustomerAddress: "Account_CustomerAddress", Account_DuplicateBaseRecord: "Account_DuplicateBaseRecord", Account_DuplicateMatchingRecord: "Account_DuplicateMatchingRecord", Account_Emails: "Account_Emails", Account_Faxes: "Account_Faxes", Account_Letters: "Account_Letters", account_master_account: "account_master_account", account_parent_account: "account_parent_account", Account_Phonecalls: "Account_Phonecalls", account_PostFollows: "account_PostFollows", account_PostRegardings: "account_PostRegardings", account_PostRoles: "account_PostRoles", account_principalobjectattributeaccess: "account_principalobjectattributeaccess", Account_ProcessSessions: "Account_ProcessSessions", Account_RecurringAppointmentMasters: "Account_RecurringAppointmentMasters", Account_ServiceAppointments: "Account_ServiceAppointments", Account_SharepointDocumentLocation: "Account_SharepointDocumentLocation", Account_Tasks: "Account_Tasks", contact_customer_accounts: "contact_customer_accounts", contract_billingcustomer_accounts: "contract_billingcustomer_accounts", contract_customer_accounts: "contract_customer_accounts", contractlineitem_customer_accounts: "contractlineitem_customer_accounts", CreatedAccount_BulkOperationLogs2: "CreatedAccount_BulkOperationLogs2", incident_customer_accounts: "incident_customer_accounts", invoice_customer_accounts: "invoice_customer_accounts", lead_customer_accounts: "lead_customer_accounts", lead_parent_account: "lead_parent_account", opportunity_customer_accounts: "opportunity_customer_accounts", opportunity_parent_account: "opportunity_parent_account", order_customer_accounts: "order_customer_accounts", quote_customer_accounts: "quote_customer_accounts", SourceAccount_BulkOperationLogs: "SourceAccount_BulkOperationLogs", userentityinstancedata_account: "userentityinstancedata_account" } }.call(Sdk.Account)
