// =====================================================================
//  This file is part of the Microsoft Dynamics CRM SDK code samples.
//
//  Copyright (C) Microsoft Corporation.  All rights reserved.
//
//  This source code is intended only as a supplement to Microsoft
//  Development Tools and/or on-line documentation.  See these other
//  materials for detailed information regarding Microsoft code samples.
//
//  THIS CODE AND INFORMATION ARE PROVIDED "AS IS" WITHOUT WARRANTY OF ANY
//  KIND, EITHER EXPRESSED OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE
//  IMPLIED WARRANTIES OF MERCHANTABILITY AND/OR FITNESS FOR A
//  PARTICULAR PURPOSE.
// =====================================================================
(function () { this.new_TestActionRequest = function (n, t, i, r, u, f, e, o, s, h, c) { function it(n) { if (typeof n == "boolean") a = n; else throw new Error("Sdk.new_TestActionRequest TestBoolean property is required and must be a Boolean."); } function rt(n) { if (n == null || n instanceof Date) v = n; else throw new Error("Sdk.new_TestActionRequest TestDateTime property must be a Date or null."); } function ut(n) { if (n == null || typeof n == "number") y = n; else throw new Error("Sdk.new_TestActionRequest TestDecimal property must be a Number or null."); } function ft(n) { if (n == null || n instanceof Sdk.Entity) p = n; else throw new Error("Sdk.new_TestActionRequest TestEntity property must be a Sdk.Entity or null."); } function et(n) { if (n == null || n instanceof Sdk.EntityCollection) w = n; else throw new Error("Sdk.new_TestActionRequest TestEntityCollection property must be a Sdk.EntityCollection or null."); } function ot(n) { if (n == null || n instanceof Sdk.EntityReference) b = n; else throw new Error("Sdk.new_TestActionRequest TestEntityReference property must be a Sdk.EntityReference or null."); } function st(n) { if (n == null || typeof n == "number") k = n; else throw new Error("Sdk.new_TestActionRequest TestFloat property must be a Number or null."); } function ht(n) { if (n == null || typeof n == "number") d = n; else throw new Error("Sdk.new_TestActionRequest TestInteger property must be a Number or null."); } function ct(n) { if (n == null || typeof n == "number") g = n; else throw new Error("Sdk.new_TestActionRequest TestMoney property must be a Number or null."); } function lt(n) { if (n == null || typeof n == "number") nt = n; else throw new Error("Sdk.new_TestActionRequest TestPicklist property must be a Number or null."); } function at(n) { if (typeof n == "string") tt = n; else throw new Error("Sdk.new_TestActionRequest TestString property is required and must be a String."); } function l() { return ["<d:request>", "<a:Parameters>", "<a:KeyValuePairOfstringanyType>", "<b:key>testBoolean<\/b:key>", a == null ? '<b:value i:nil="true" />' : ['<b:value i:type="c:boolean">', a, "<\/b:value>"].join(""), "<\/a:KeyValuePairOfstringanyType>", "<a:KeyValuePairOfstringanyType>", "<b:key>testDateTime<\/b:key>", v == null ? '<b:value i:nil="true" />' : ['<b:value i:type="c:dateTime">', v.toISOString(), "<\/b:value>"].join(""), "<\/a:KeyValuePairOfstringanyType>", "<a:KeyValuePairOfstringanyType>", "<b:key>testDecimal<\/b:key>", y == null ? '<b:value i:nil="true" />' : ['<b:value i:type="c:decimal">', y, "<\/b:value>"].join(""), "<\/a:KeyValuePairOfstringanyType>", "<a:KeyValuePairOfstringanyType>", "<b:key>testEntity<\/b:key>", p == null ? '<b:value i:nil="true" />' : ['<b:value i:type="a:Entity">', p.toValueXml(), "<\/b:value>"].join(""), "<\/a:KeyValuePairOfstringanyType>", "<a:KeyValuePairOfstringanyType>", "<b:key>testEntityCollection<\/b:key>", w == null ? '<b:value i:nil="true" />' : ['<b:value i:type="a:EntityCollection">', w.toValueXml(), "<\/b:value>"].join(""), "<\/a:KeyValuePairOfstringanyType>", "<a:KeyValuePairOfstringanyType>", "<b:key>testEntityReference<\/b:key>", b == null ? '<b:value i:nil="true" />' : ['<b:value i:type="a:EntityReference">', b.toValueXml(), "<\/b:value>"].join(""), "<\/a:KeyValuePairOfstringanyType>", "<a:KeyValuePairOfstringanyType>", "<b:key>testFloat<\/b:key>", k == null ? '<b:value i:nil="true" />' : ['<b:value i:type="c:double">', k, "<\/b:value>"].join(""), "<\/a:KeyValuePairOfstringanyType>", "<a:KeyValuePairOfstringanyType>", "<b:key>testInteger<\/b:key>", d == null ? '<b:value i:nil="true" />' : ['<b:value i:type="c:int">', d, "<\/b:value>"].join(""), "<\/a:KeyValuePairOfstringanyType>", "<a:KeyValuePairOfstringanyType>", "<b:key>testMoney<\/b:key>", g == null ? '<b:value i:nil="true" />' : ['<b:value i:type="a:Money">', "<a:Value>", g, "<\/a:Value>", "<\/b:value>"].join(""), "<\/a:KeyValuePairOfstringanyType>", "<a:KeyValuePairOfstringanyType>", "<b:key>testPicklist<\/b:key>", nt == null ? '<b:value i:nil="true" />' : ['<b:value i:type="a:OptionSetValue">', "<a:Value>", nt, "<\/a:Value>", "<\/b:value>"].join(""), "<\/a:KeyValuePairOfstringanyType>", "<a:KeyValuePairOfstringanyType>", "<b:key>testString<\/b:key>", tt == null ? '<b:value i:nil="true" />' : ['<b:value i:type="c:string">', tt, "<\/b:value>"].join(""), "<\/a:KeyValuePairOfstringanyType>", "<\/a:Parameters>", '<a:RequestId i:nil="true" />', "<a:RequestName>new_TestAction<\/a:RequestName>", "<\/d:request>"].join("") } if (!(this instanceof Sdk.new_TestActionRequest)) return new Sdk.new_TestActionRequest(n, t, i, r, u, f, e, o, s, h, c); Sdk.OrganizationRequest.call(this); var a = null, v = null, y = null, p = null, w = null, b = null, k = null, d = null, g = null, nt = null, tt = null; typeof n != "undefined" && it(n); typeof t != "undefined" && rt(t); typeof i != "undefined" && ut(i); typeof r != "undefined" && ft(r); typeof u != "undefined" && et(u); typeof f != "undefined" && ot(f); typeof e != "undefined" && st(e); typeof o != "undefined" && ht(o); typeof s != "undefined" && ct(s); typeof h != "undefined" && lt(h); typeof c != "undefined" && at(c); this.setResponseType(Sdk.new_TestActionResponse); this.setRequestXml(l()); this.setTestBoolean = function (n) { it(n); this.setRequestXml(l()) }; this.setTestDateTime = function (n) { rt(n); this.setRequestXml(l()) }; this.setTestDecimal = function (n) { ut(n); this.setRequestXml(l()) }; this.setTestEntity = function (n) { ft(n); this.setRequestXml(l()) }; this.setTestEntityCollection = function (n) { et(n); this.setRequestXml(l()) }; this.setTestEntityReference = function (n) { ot(n); this.setRequestXml(l()) }; this.setTestFloat = function (n) { st(n); this.setRequestXml(l()) }; this.setTestInteger = function (n) { ht(n); this.setRequestXml(l()) }; this.setTestMoney = function (n) { ct(n); this.setRequestXml(l()) }; this.setTestPicklist = function (n) { lt(n); this.setRequestXml(l()) }; this.setTestString = function (n) { at(n); this.setRequestXml(l()) } }; this.new_TestActionRequest.__class = !0; this.new_TestActionResponse = function (n) { function a(n) { var i = Sdk.Xml.selectSingleNode(n, "//a:KeyValuePairOfstringanyType[b:key='testBooleanOut']/b:value"); Sdk.Xml.isNodeNull(i) || (t = Sdk.Xml.getNodeText(i) == "true" ? !0 : !1) } function v(n) { var t = Sdk.Xml.selectSingleNode(n, "//a:KeyValuePairOfstringanyType[b:key='testDateTimeOut']/b:value"); Sdk.Xml.isNodeNull(t) || (i = new Date(Sdk.Xml.getNodeText(t))) } function y(n) { var t = Sdk.Xml.selectSingleNode(n, "//a:KeyValuePairOfstringanyType[b:key='testDecimalOut']/b:value"); Sdk.Xml.isNodeNull(t) || (r = parseFloat(Sdk.Xml.getNodeText(t))) } function p(n) { var t = Sdk.Xml.selectSingleNode(n, "//a:KeyValuePairOfstringanyType[b:key='testEntityOut']/b:value"); Sdk.Xml.isNodeNull(t) || (u = Sdk.Util.createEntityFromNode(t)) } function w(n) { var t = Sdk.Xml.selectSingleNode(n, "//a:KeyValuePairOfstringanyType[b:key='testEntityCollectionOut']/b:value"); Sdk.Xml.isNodeNull(t) || (f = Sdk.Util.createEntityCollectionFromNode(t)) } function b(n) { var t = Sdk.Xml.selectSingleNode(n, "//a:KeyValuePairOfstringanyType[b:key='testEntityReferenceOut']/b:value"); Sdk.Xml.isNodeNull(t) || (e = Sdk.Util.createEntityReferenceFromNode(t)) } function k(n) { var t = Sdk.Xml.selectSingleNode(n, "//a:KeyValuePairOfstringanyType[b:key='testFloatOut']/b:value"); Sdk.Xml.isNodeNull(t) || (o = parseFloat(Sdk.Xml.getNodeText(t))) } function d(n) { var t = Sdk.Xml.selectSingleNode(n, "//a:KeyValuePairOfstringanyType[b:key='testIntegerOut']/b:value"); Sdk.Xml.isNodeNull(t) || (s = parseInt(Sdk.Xml.getNodeText(t), 10)) } function g(n) { var t = Sdk.Xml.selectSingleNode(n, "//a:KeyValuePairOfstringanyType[b:key='testMoneyOut']/b:value"); Sdk.Xml.isNodeNull(t) || (h = parseFloat(Sdk.Xml.getNodeText(t))) } function nt(n) { var t = Sdk.Xml.selectSingleNode(n, "//a:KeyValuePairOfstringanyType[b:key='testPicklistOut']/b:value"); Sdk.Xml.isNodeNull(t) || (c = parseInt(Sdk.Xml.getNodeText(t), 10)) } function tt(n) { var t = Sdk.Xml.selectSingleNode(n, "//a:KeyValuePairOfstringanyType[b:key='testStringOut']/b:value"); Sdk.Xml.isNodeNull(t) || (l = Sdk.Xml.getNodeText(t)) } if (!(this instanceof Sdk.new_TestActionResponse)) return new Sdk.new_TestActionResponse(n); Sdk.OrganizationResponse.call(this); var t = null, i = null, r = null, u = null, f = null, e = null, o = null, s = null, h = null, c = null, l = null; this.getTestBooleanOut = function () { return t }; this.getTestDateTimeOut = function () { return i }; this.getTestDecimalOut = function () { return r }; this.getTestEntityOut = function () { return u }; this.getTestEntityCollectionOut = function () { return f }; this.getTestEntityReferenceOut = function () { return e }; this.getTestFloatOut = function () { return o }; this.getTestIntegerOut = function () { return s }; this.getTestMoneyOut = function () { return h }; this.getTestPicklistOut = function () { return c }; this.getTestStringOut = function () { return l }; a(n); v(n); y(n); p(n); w(n); b(n); k(n); d(n); g(n); nt(n); tt(n) }; this.new_TestActionResponse.__class = !0 }).call(Sdk); Sdk.new_TestActionRequest.prototype = new Sdk.OrganizationRequest; Sdk.new_TestActionResponse.prototype = new Sdk.OrganizationResponse
