<Activity mc:Ignorable="sap sap2010 sads" x:Class="GetProductsActivities.GetProductsWorkflow"
 xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities"
 xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
 xmlns:mca="clr-namespace:Microsoft.CSharp.Activities;assembly=System.Activities"
 xmlns:p="http://schemas.microsoft.com/workflow/2012/07/xaml/activities"
 xmlns:p1="wf://workflow.windows.net/$Current/$Activities"
 xmlns:sads="http://schemas.microsoft.com/netfx/2010/xaml/activities/debugger"
 xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation"
 xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation"
 xmlns:scg="clr-namespace:System.Collections.Generic;assembly=mscorlib"
 xmlns:sco="clr-namespace:System.Collections.ObjectModel;assembly=mscorlib"
 xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property Name="SearchKeyword" Type="InArgument(x:String)" />
  </x:Members>
  <sap2010:ExpressionActivityEditor.ExpressionActivityEditor>C#</sap2010:ExpressionActivityEditor.ExpressionActivityEditor>
  <sap2010:WorkflowViewState.IdRef>GetProductsActivities.GetProductsWorkflow_1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <sco:Collection x:TypeArguments="x:String">
      <x:String>System</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Text</x:String>
      <x:String>Microsoft.Activities</x:String>
    </sco:Collection>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <sco:Collection x:TypeArguments="AssemblyReference">
      <AssemblyReference>Microsoft.Activities</AssemblyReference>
      <AssemblyReference>Microsoft.CSharp</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>System.ServiceModel.Activities</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>GetProductsActivities</AssemblyReference>
    </sco:Collection>
  </TextExpression.ReferencesForImplementation>
  <Sequence sap2010:WorkflowViewState.IdRef="Sequence_2">
    <Sequence.Variables>
      <Variable x:TypeArguments="p:DynamicValue" Name="ProductsData" />
      <Variable x:TypeArguments="x:Int32" Name="Count" />
      <Variable x:TypeArguments="x:String" Name="ProductsList" />
    </Sequence.Variables>
    <p1:GetProducts sap2010:WorkflowViewState.IdRef="GetProducts_1">
      <p1:GetProducts.ProductsData>
        <OutArgument x:TypeArguments="p:DynamicValue">
          <mca:CSharpReference x:TypeArguments="p:DynamicValue">ProductsData</mca:CSharpReference>
        </OutArgument>
      </p1:GetProducts.ProductsData>
      <p1:GetProducts.SearchKeyword>
        <InArgument x:TypeArguments="x:String">
          <mca:CSharpValue x:TypeArguments="x:String">SearchKeyword</mca:CSharpValue>
        </InArgument>
      </p1:GetProducts.SearchKeyword>
    </p1:GetProducts>
    <p:CountDynamicValueItems sap2010:WorkflowViewState.IdRef="CountDynamicValueItems_1">
      <p:CountDynamicValueItems.Result>
        <OutArgument x:TypeArguments="x:Int32">
          <mca:CSharpReference x:TypeArguments="x:Int32">Count</mca:CSharpReference>
        </OutArgument>
      </p:CountDynamicValueItems.Result>
      <InArgument x:TypeArguments="p:DynamicValue">
        <mca:CSharpValue x:TypeArguments="p:DynamicValue">ProductsData</mca:CSharpValue>
      </InArgument>
    </p:CountDynamicValueItems>
    <p:SetUserStatus sap2010:WorkflowViewState.IdRef="SetUserStatus_1">
      <p:SetUserStatus.Description>
        <InArgument x:TypeArguments="x:String">
          <mca:CSharpValue x:TypeArguments="x:String">"Products: " + Count</mca:CSharpValue>
        </InArgument>
      </p:SetUserStatus.Description>
    </p:SetUserStatus>
    <Delay sap2010:WorkflowViewState.IdRef="Delay_1">
      <InArgument x:TypeArguments="x:TimeSpan">
        <mca:CSharpValue x:TypeArguments="x:TimeSpan">TimeSpan.FromSeconds(2)</mca:CSharpValue>
      </InArgument>
    </Delay>
    <While sap2010:WorkflowViewState.IdRef="While_1">
      <While.Variables>
        <Variable x:TypeArguments="x:Int32" Name="Items" />
        <Variable x:TypeArguments="x:String" Name="ProductName" />
      </While.Variables>
      <While.Condition>
        <mca:CSharpValue x:TypeArguments="x:Boolean">Items &lt; Count</mca:CSharpValue>
      </While.Condition>
      <Sequence sap2010:WorkflowViewState.IdRef="Sequence_1">
        <p:GetDynamicValueProperty x:TypeArguments="x:String" DisplayName="GetProductName" sap2010:WorkflowViewState.IdRef="GetDynamicValueProperty`1_1">
          <p:GetDynamicValueProperty.PropertyName>
            <InArgument x:TypeArguments="x:String">
              <mca:CSharpValue x:TypeArguments="x:String">"(" + Items + ")/ProductName"</mca:CSharpValue>
            </InArgument>
          </p:GetDynamicValueProperty.PropertyName>
          <p:GetDynamicValueProperty.Result>
            <OutArgument x:TypeArguments="x:String">
              <mca:CSharpReference x:TypeArguments="x:String">ProductName</mca:CSharpReference>
            </OutArgument>
          </p:GetDynamicValueProperty.Result>
          <p:GetDynamicValueProperty.Source>
            <InArgument x:TypeArguments="p:DynamicValue">
              <mca:CSharpValue x:TypeArguments="p:DynamicValue">ProductsData</mca:CSharpValue>
            </InArgument>
          </p:GetDynamicValueProperty.Source>
        </p:GetDynamicValueProperty>
        <p:SetUserStatus sap2010:WorkflowViewState.IdRef="SetUserStatus_2">
          <p:SetUserStatus.Description>
            <InArgument x:TypeArguments="x:String">
              <mca:CSharpValue x:TypeArguments="x:String">"Product: " + ProductName</mca:CSharpValue>
            </InArgument>
          </p:SetUserStatus.Description>
        </p:SetUserStatus>
        <Delay sap2010:WorkflowViewState.IdRef="Delay_2">
          <InArgument x:TypeArguments="x:TimeSpan">
            <mca:CSharpValue x:TypeArguments="x:TimeSpan">TimeSpan.FromSeconds(1)</mca:CSharpValue>
          </InArgument>
        </Delay>
        <Assign sap2010:WorkflowViewState.IdRef="Assign_1">
          <Assign.To>
            <OutArgument x:TypeArguments="x:Int32">
              <mca:CSharpReference x:TypeArguments="x:Int32">Items</mca:CSharpReference>
            </OutArgument>
          </Assign.To>
          <Assign.Value>
            <InArgument x:TypeArguments="x:Int32">
              <mca:CSharpValue x:TypeArguments="x:Int32">Items + 1</mca:CSharpValue>
            </InArgument>
          </Assign.Value>
        </Assign>
        <Assign sap2010:WorkflowViewState.IdRef="Assign_2">
          <Assign.To>
            <OutArgument x:TypeArguments="x:String">
              <mca:CSharpReference x:TypeArguments="x:String">ProductsList</mca:CSharpReference>
            </OutArgument>
          </Assign.To>
          <Assign.Value>
            <InArgument x:TypeArguments="x:String">
              <mca:CSharpValue x:TypeArguments="x:String">ProductsList + ProductName + "\n"</mca:CSharpValue>
            </InArgument>
          </Assign.Value>
        </Assign>
      </Sequence>
    </While>
    <p:SetUserStatus sap2010:WorkflowViewState.IdRef="SetUserStatus_3">
      <p:SetUserStatus.Description>
        <InArgument x:TypeArguments="x:String">
          <mca:CSharpValue x:TypeArguments="x:String">"Products List:\n" + ProductsList</mca:CSharpValue>
        </InArgument>
      </p:SetUserStatus.Description>
    </p:SetUserStatus>
  </Sequence>
  <sap2010:WorkflowViewState.ViewStateManager>
    <sap2010:ViewStateManager>
      <sap2010:ViewStateData Id="GetProducts_1" sap:VirtualizedContainerService.HintSize="464,22" />
      <sap2010:ViewStateData Id="CountDynamicValueItems_1" sap:VirtualizedContainerService.HintSize="464,22" />
      <sap2010:ViewStateData Id="SetUserStatus_1" sap:VirtualizedContainerService.HintSize="464,22" />
      <sap2010:ViewStateData Id="Delay_1" sap:VirtualizedContainerService.HintSize="464,22" />
      <sap2010:ViewStateData Id="GetDynamicValueProperty`1_1" sap:VirtualizedContainerService.HintSize="242,22" />
      <sap2010:ViewStateData Id="SetUserStatus_2" sap:VirtualizedContainerService.HintSize="242,22" />
      <sap2010:ViewStateData Id="Delay_2" sap:VirtualizedContainerService.HintSize="242,22" />
      <sap2010:ViewStateData Id="Assign_1" sap:VirtualizedContainerService.HintSize="242,59" />
      <sap2010:ViewStateData Id="Assign_2" sap:VirtualizedContainerService.HintSize="242,59" />
      <sap2010:ViewStateData Id="Sequence_1" sap:VirtualizedContainerService.HintSize="264,468">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="While_1" sap:VirtualizedContainerService.HintSize="464,621" />
      <sap2010:ViewStateData Id="SetUserStatus_3" sap:VirtualizedContainerService.HintSize="464,22" />
      <sap2010:ViewStateData Id="Sequence_2" sap:VirtualizedContainerService.HintSize="486,1055">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="GetProductsActivities.GetProductsWorkflow_1" sap:VirtualizedContainerService.HintSize="526,1135" />
    </sap2010:ViewStateManager>
  </sap2010:WorkflowViewState.ViewStateManager>
</Activity>